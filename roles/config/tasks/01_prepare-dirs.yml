---
- name: Check if repo destination exists
  stat:
    path: '/home/{{ normal_user.name }}/{{ item.dest }}'
  register: dir

- name: Check if repo destination is empty
  find:
    hidden: yes
    paths: '/home/{{ normal_user.name }}/{{ item.dest }}'
  register: dirfind
  when: dir.stat.exists and dir.stat.isdir

- name: Check if repo destination is already a git repo
  stat:
    path: '/home/{{ normal_user.name }}/{{ item.dest }}/.git'
  register: gitdir
  when: dir.stat.exists and dir.stat.isdir

- name: Check if repo destination git config file exists
  stat:
    path: '/home/{{ normal_user.name }}/{{ item.dest }}/.git/config'
  register: gitconf
  when: gitdir is not skipped and gitdir.stat.exists and gitdir.stat.isdir

- name: Check the remote url of the existing git repo
  command: 'grep -q "url = {{ item.url }}" "/home/{{ normal_user.name }}/{{ item.dest }}/.git/config"'
  check_mode: no
  ignore_errors: yes
  changed_when: no
  register: urlcheck
  when: gitconf is not skipped and gitconf.stat.exists

- name: Delete the repo destination
  file:
    path: '/home/{{ normal_user.name }}/{{ item.dest }}'
    state: absent
  when: dir.stat.exists and not dir.stat.isdir
    or  urlcheck is not skipped and urlcheck.rc != 0
    or  gitconf is not skipped and not gitconf.stat.exists and
        dirfind is not skipped and dirfind.matched > 0
